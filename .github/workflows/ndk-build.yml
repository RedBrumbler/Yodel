name: NDK build

on:
  push:
    tags:
      - 'v*'
    branches:
      - 'main'
      - 'dev/**'
      - 'feat/**'
    paths-ignore:
      - ".gitignore"
      - "**.yml"
      - "!.github/workflows/ndk-build.yml"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          submodules: true
          lfs: true

      - uses: seanmiddleditch/gha-setup-ninja@v3

      - name: Create ndkpath.txt
        run: |
          echo "$ANDROID_NDK_LATEST_HOME" > ${GITHUB_WORKSPACE}/ndkpath.txt
          cat ${GITHUB_WORKSPACE}/ndkpath.txt

      - name: Extract version
        if: startsWith(github.ref, 'refs/tags/v')
        id: version
        run: |
          echo "TAG=${GITHUB_REF#refs/tags/}" >> ${GITHUB_OUTPUT}
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> ${GITHUB_OUTPUT}

      - name: Setup qpm
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        uses: Fernthedev/qpm-action@main
        with:
          workflow_token: ${{ secrets.GITHUB_TOKEN }}
          restore: true
          cache: true
          publish: false

      - name: Setup qpm for release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: Fernthedev/qpm-action@main
        with:
          workflow_token: ${{ secrets.GITHUB_TOKEN }}
          restore: true
          cache: true
          publish: true
          publish_token: ${{ secrets.QPM_KEY }}
          version: ${{ steps.version.outputs.VERSION }}
          tag: ${{ steps.version.outputs.TAG }}
          qpm_release_bin: true
          qpm_debug_bin: false

      - name: build
        run: pwsh ./scripts/build.ps1

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: libyodel.so
          path: ./build/libyodel.so
          if-no-files-found: error

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          generate_release_notes: true
